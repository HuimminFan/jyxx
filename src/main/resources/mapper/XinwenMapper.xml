<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="t_xinwen">
  <resultMap id="BaseResultMap" type="_Xinwen">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="xinwenlock" jdbcType="INTEGER" property="xinwenlock" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="_Xinwen">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, createtime, title, xinwenlock
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_xinwen
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_xinwen
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="_Xinwen">
    insert into t_xinwen (id, createtime, title, 
      xinwenlock, content)
    values (#{id,jdbcType=BIGINT}, #{createtime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, 
      #{xinwenlock,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="_Xinwen">
    insert into t_xinwen
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="xinwenlock != null">
        xinwenlock,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="xinwenlock != null">
        #{xinwenlock,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="_Xinwen">
    update t_xinwen
    <set>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="xinwenlock != null">
        xinwenlock = #{xinwenlock,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="_Xinwen">
    update t_xinwen
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      xinwenlock = #{xinwenlock,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="_Xinwen">
    update t_xinwen
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      xinwenlock = #{xinwenlock,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>